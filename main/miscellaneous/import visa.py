import pyvisa


class CommandsMNIPI:
    def __init__(self) -> None:
        self.PUSH_MENU = 1
        self.PUSH_RIGHT = b''
        self.PUSH_Z = b''
        self.PUSH_R = b''
        self.PUSH_DOWN = b''
        self.PUSH_ENTER = b''
        self.PUSH_UP = b''
        self.PUSH_L = b''
        self.PUSH_CALL = b''
        self.PUSH_LEFT = b''
        self.PUSH_I = b''
        self.PUSH_C = b''
        self.CHANGE_SHIFT=b''
        self.CHANGE_FREQ=  ''
        self.CHANGE_LEVEL=b''
        self.CHANGE_RANGE = b''  # = 
# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ PyVISA
rm = pyvisa.ResourceManager()
lib = rm.visalib


# –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ä–µ—Å—É—Ä—Å–æ–≤
resources = rm.list_resources()

# –í—ã–≤–æ–¥ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö —Ä–µ—Å—É—Ä—Å–æ–≤
print("–ù–∞–π–¥–µ–Ω–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã:")
for resource in resources:
    print(resource)

asdd = CommandsMNIPI()

instrument = rm.open_resource("ASRL8::INSTR")
#print(instrument.open())
print(instrument.last_status)
instrument.baud_rate = 9600
#instrument.write_binary_values('', values = [1])
#instrument.write("qwqwqwqwqwqwq")
instrument.read()
instrument.close()
print(instrument)
# –ü–µ—Ä–µ–±–æ—Ä —Ä–µ—Å—É—Ä—Å–æ–≤ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ *IDN? –∏ –≤–µ—Ä—Å–∏–∏ –ø—Ä–æ—à–∏–≤–∫–∏
for resource in resources:
    try:
        # –°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –∫–∞–∂–¥—ã–º —Ä–µ—Å—É—Ä—Å–æ–º
        instrument = rm.open_resource(resource)

        # –ó–∞–ø—Ä–æ—Å *IDN?
        idn_response = instrument.query('*IDN?')
        print(f"{resource} *IDN?: {idn_response.strip()}")

        # –ó–∞–ø—Ä–æ—Å –≤–µ—Ä—Å–∏–∏ –ø—Ä–æ—à–∏–≤–∫–∏ (–ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —ç—Ç—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é)
        firmware_version = instrument.query('FIRMWARE_VERSION?')
        print(f"{resource} –í–µ—Ä—Å–∏—è –ø—Ä–æ—à–∏–≤–∫–∏: {firmware_version.strip()}")

        # –ó–∞–∫—Ä—ã—Ç–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Ä–µ—Å—É—Ä—Å–æ–º
        instrument.close()
    except pyvisa.errors.VisaIOError as e:
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏—è, –µ—Å–ª–∏ —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ {resource}: {str(e)}")
