dict_items([('priority', 1), ('am_i_should_do_step', False), ('am_i_active_in_experiment', True), ('previous_step_time', 1707417163.0921614), ('pause_time', 5.0), ('number_meas', 0), ('timer_for_scan_com_port', <PyQt5.QtCore.QTimer object at 0x0000025E7FDBFB50>), ('type_connection', 'modbus'), ('signal_list', []), ('installation_class', <__main__.installation_class object at 0x0000025E15620AD0>), ('name', 'Maisheng1'), ('setting_window', <interface.set_power_supply_window.Ui_Set_power_supply object at 0x0000025E156653F0>), ('number_steps', '3'), ('is_first_meas', True), ('is_end_meas', False), ('client', <ModbusSerialClient at 0x25e1567ae90 socket=None, framer=<pymodbus.framer.rtu_framer.ModbusRtuFramer object at 0x0000025E7F689F50>, timeout=0.3>), ('dict_buf_parameters', {'trigger': 'Таймер', 'sourse/time': '5', 'num steps': 0, 'baudrate': '9600', 'COM': 'COM14', 'type_of_work': 'Стабилизация напряжения', 'type_step': 'Заданный шаг', 'high_limit': '30', 'low_limit': '0.01', 'step': '5', 'second_value': '15'}), ('dict_settable_parameters', {'trigger': 'Таймер', 'sourse/time': '5', 'num steps': 7, 'baudrate': '9600', 'COM': 'COM14', 'type_of_work': 'Стабилизация напряжения', 'type_step': 'Заданный шаг', 'high_limit': '30', 'low_limit': '0.01', 'step': '5', 'second_value': '15'}), ('is_window_created', False), ('active_ports', ['COM13', 'COM14']), ('key_to_signal_func', True), ('i_am_set', True), ('test', True), ('steps_current', [15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0]), ('steps_voltage', [0.01, 5.01, 10.01, 15.01, 20.009999999999998, 25.009999999999998, 30.0]), ('max_current', 15), ('max_voltage', 200), ('max_power', 2000), ('min_step_V', 0.01), ('min_step_A', 0.1), ('min_step_W', 1), ('is_stop_correct', True), ('is_start_correct', True), ('is_step_correct', True), ('is_second_value_correct', True), ('is_parameters_correct', True), ('step_index', 0)])
dict_items([('priority', 2), ('am_i_should_do_step', False), ('am_i_active_in_experiment', True), ('previous_step_time', 1707417163.0921614), ('pause_time', 5.0), ('number_meas', 0), ('timer_for_scan_com_port', <PyQt5.QtCore.QTimer object at 0x0000025E15666C20>), ('type_connection', 'serial'), ('signal_list', []), ('installation_class', <__main__.installation_class object at 0x0000025E15620AD0>), ('name', 'Lock in2'), ('setting_window', <interface.set_sr830_window.Ui_Set_sr830 object at 0x0000025E7FDBFBE0>), ('number_steps', 3), ('is_first_meas', True), ('is_end_meas', False), ('client', Serial<id=0x25e1567ec50, open=True>(port='COM13', baudrate=9600, bytesize=8, parity='N', stopbits=1, timeout=1, xonxoff=False, rtscts=False, dsrdtr=False)), ('dict_buf_parameters', {'trigger': 'Таймер', 'sourse/time': '5', 'num steps': 3, 'baudrate': '9600', 'COM': 'COM13', 'time_const': 1000.0, 'filter_slope': 6, 'SYNK_200_Hz': 'On', 'sensitivity': 1.0, 'reserve': 'high reserve', 'input_channel': 'A', 'input_type': 'AC', 'input_connect': 'float', 'filters': 'line', 'frequency': 400.0, 'amplitude': 1.0}), ('dict_settable_parameters', {'trigger': 'Таймер', 'sourse/time': '5', 'num steps': 3, 'baudrate': '9600', 'COM': 'COM13', 'time_const': 1000.0, 'filter_slope': 6, 'SYNK_200_Hz': 'On', 'sensitivity': 1.0, 'reserve': 'high reserve', 'input_channel': 'A', 'input_type': 'AC', 'input_connect': 'float', 'filters': 'line', 'frequency': 400.0, 'amplitude': 1.0}), ('is_window_created', False), ('active_ports', ['COM13', 'COM14']), ('key_to_signal_func', True), ('i_am_set', True), ('device', <pymeasure.instruments.srs.sr830.SR830 object at 0x0000025E15686590>), ('counter', 0), ('frequency_enter', '400'), ('amplitude_enter', '1'), ('sourse_enter', '5'), ('boudrate', '9600'), ('comportslist', 'COM13'), ('time_const_enter_number', '1'), ('time_const_enter_factor', 'X1'), ('time_const_enter_decimal_factor', 'ks'), ('Filt_slope_enter_level', '6 dB'), ('SYNK_enter', 'On'), ('sensitivity_enter_number', '1'), ('sensitivity_enter_factor', 'X1'), ('sensitivity_enter_decimal_factor', 'V/uA'), ('input_channels_enter', 'A'), ('input_type_enter', 'AC'), ('connect_ch_enter', 'float'), ('reserve_enter', 'high reserve'), ('filters_enter', 'line'), ('triger_enter', 'Таймер'), ('command', <commandsSR830.commandsSR830 object at 0x0000025E15686650>), ('is_parameters_correct', True), ('step_index', 0)])